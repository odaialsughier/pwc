<?php
/**
 * Created by PhpStorm.
 * User: anasjamil
 * Date: 4/10/18
 * Time: 16:39 PM
 */
namespace common\behaviors;

use common\components\Helper;
use common\models\MemberDevice;
use Yii;
use yii\base\Behavior;
use yii\web\Application;
use common\models\Platform;

/**
 * Class GetPlatformBehavior
 * @package common\behaviors
 * @property integer $platform
 *
 */
class GetPlatformBehavior extends Behavior
{
    public $payloadFieldName = 'payload'; // Default
    public $rules = array();


    const ANDROID_TABLET_PLATFORMID = 12;
    const ANDROID_PLATFORMID = 13;
    
    const IOS_TABLET_PLATFORMID = 21;
    const IOS_PLATFORMID = 20;

    const WEB_OTHER = 56;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }

    public static function getPlatform()
    {
        $platformId = NULL;
        //why to loop over all headers ?? we are looking for 2 or 3 only ! :)
//        $headers = array();
//        $headersIterator = Yii::$app->request->getHeaders()->getIterator()->getArrayCopy();
//        foreach ($headersIterator as $key => $value) {
//            $headers[$key] = $value[0];
//        }
        $os = Yii::$app->request->headers->get('os');
        $appName = Yii::$app->request->headers->get('app-name');//headers['app-name'];
        $deviceType = Yii::$app->request->headers->get('device-type');//!empty($headers['device-type']) ? $headers['device-type'] : NULL;

        try {

            if (!empty($appName) && !empty($os)) {
                $platformName = $os . "_app_$appName";

                if (!empty($deviceType)) {
                    $platformName = $os . "_$deviceType" . "_$appName";
                } else if ($os === 'web') {
                    $platformName = $appName;
                } else {
                    $platformName = $os . "_$appName";
                }

                $platform = Platform::find()->andWhere(['platform_name' => $platformName])->cache(500)->one();

                if (empty($platform)) {
                    $newPlatform = new Platform();
                    $newPlatform->platform_name = $platformName;
                    $newPlatform->type = ($os == 'app' || $appName == 'app') ? 'app' : 'web';
                    $newPlatform->platform_description = "$os $deviceType using $appName";
                    $newPlatform->active = 1;
                    $save = $newPlatform->save(false);
                    $platformId = !empty($save) ? $newPlatform->platform_id : NULL;
                } else {
                    $platformId = !empty($platform->platform_id) ? $platform->platform_id : null;
                }
            }

            if (empty($platformId)) {
                if ($os == MemberDevice::OS_ANDROID) {
                    if ($deviceType == 'tablet') {
                        $platformId = self::ANDROID_TABLET_PLATFORMID;
                    } else {
                        $platformId = self::ANDROID_PLATFORMID;
                    }
                } else if ($os == MemberDevice::OS_IOS) {
                    if ($deviceType == 'tablet') {
                        $platformId = self::IOS_TABLET_PLATFORMID;
                    } else {
                        $platformId = self::IOS_PLATFORMID;
                    }
                }else if($os == 'web'){
                       $platformId = self::WEB_OTHER;
                }
            }




        }catch (\Exception $e){

        }
        try {
            if (empty($platformId)) {
                $browser  = Helper::parseUserAgent();
                if (!empty($browser) && !empty($browser['platform']) && $browser['browser']) {

                    $type = (strtolower($os) == 'app' || strtolower($appName) == 'app') ? 'app' : 'web';

                    $platform_name = $type . '_' . $browser['platform'] . '_' . $browser['browser'];

                    $platform = Platform::find()->andWhere(['platform_name'=>$platform_name])->one();

                    if (empty($platform)) {
                        $platform = new Platform( ['platform_name' => $platform_name, 'type' => $type, 'active' => 1]);
                        $platform->platform_description = $platform_name;
                        if ($platform->save(false)) {
                            $platformId = $platform->platform_id;
                        }
                    } else {
                        $platformId = $platform->platform_id;
                    }
                }
            }
        }catch (\Exception $e){

        }

        if(empty($platformId) && $os == 'web'){
            $platformId = self::WEB_OTHER;
        }

        return $platformId;
    }

}